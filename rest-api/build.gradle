import java.nio.file.Files
import java.nio.file.Paths

buildscript {
    repositories {
        mavenCentral()
    }
}

plugins {
    id "org.asciidoctor.convert" version "1.5.3"
}

apply plugin: 'application'
apply from: rootProject.rootDir.path + '/gradle/integrationTest.gradle'

mainClassName = 'io.nobt.application.NobtApplication'

ext {
    snippetsDir = file('build/generated-snippets')
}

asciidoctor {
    attributes 'snippets': snippetsDir
    inputs.dir snippetsDir
}

asciidoctor.mustRunAfter integrationTest

dependencies {
    compile project(':core')
    compile project(':application-config')
    compile project(':persistence')
    compile project(':inmemory-persistence')
    compile project(':db-migrations')

    compile 'com.getsentry.raven:raven-log4j2:8.0.3'

    compile 'org.zalando:problem:0.22.0'
    compile 'org.zalando:jackson-datatype-problem:0.22.0'

    compile group: 'org.hibernate', name: 'hibernate-entitymanager', version: '5.3.7.Final'

    compile group: 'org.glassfish', name: 'javax.el', version: '3.0.1-b10'
    compile group: 'org.hibernate', name: 'hibernate-validator', version: '6.0.16.Final'

    compile group: 'org.apache.logging.log4j', name: 'log4j-core', version: '2.14.1'
    compile group: 'org.apache.logging.log4j', name: 'log4j-slf4j-impl', version: '2.11.2'
    compile group: 'com.sparkjava', name: 'spark-core', version: '2.9.0'

    compile group: 'com.fasterxml.jackson.core', name: 'jackson-databind', version: '2.9.8'
    compile group: 'com.fasterxml.jackson.datatype', name: 'jackson-datatype-jsr310', version: '2.13.0'
    compile group: 'com.fasterxml.jackson.datatype', name: 'jackson-datatype-jdk8', version: '2.9.8'

    testCompile project(path: ':core', configuration: 'testSupport')
    testCompile group: 'org.mockito', name: 'mockito-core', version: '4.8.1'
    testCompile group: 'junit', name: 'junit', version: '4.12'
    testCompile group: 'org.hamcrest', name: 'hamcrest-all', version: '1.3'
    testCompile(group: 'commons-logging', name: 'commons-logging', version: '1.2')

    integrationTestCompile project(path: ':persistence', configuration: 'testSupport')
    integrationTestCompile project(path: ':spring-rest-docs')
}

distributions {
    main {
        contents {
            from("${asciidoctor.outputDir}/html5/index.html") {
                into 'docs'
            }
        }
    }
}

applicationDefaultJvmArgs = [
        "-Djava.util.logging.manager=org.apache.logging.log4j.jul.LogManager"
]

distTar {
    enabled = false
}

distZip {
    dependsOn asciidoctor
}

task createSymbolicLink(dependsOn: 'distZip') << {

    def distributionsDir = distZip.destinationDir.path

    def link = Paths.get(distributionsDir, "rest-api-latest")
    def target = Paths.get(distributionsDir, distZip.archiveName)

    Files.createSymbolicLink(link, target)
}

build.dependsOn createSymbolicLink

task runLocal(type: JavaExec) {
    classpath = sourceSets.main.runtimeClasspath
    main = mainClassName
    systemProperties 'profile': 'LOCAL'
}